version: '3'
services:
  pp-mysql:
    hostname: pp-mysql
    container_name: pp-mysql
    image: mysql:8.1.0
    restart: unless-stopped
    ports:
      - 3307:${DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      MYSQL_DATABASE: $DB_NAME
    networks:
      - pp-network

  pp-mongo:
    hostname: pp-mongo
    container_name: pp-mongo
    image: mongo:7.0.1
    restart: unless-stopped
    ports:
      - 27018:${MONGO_DB_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_DB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_DB_PASSWORD
    networks:
      - pp-network

  pp-zookeeper:
    hostname: pp-zookeeper
    container_name: pp-zookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:${ZOOKEEPER_PORT}
    networks:
      - pp-network

  pp-kafka:
    hostname: pp-kafka
    container_name: pp-kafka
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - 19092:${KAFKA_PORT}
    environment:
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_PROTOCOL://pp-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_PROTOCOL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_PROTOCOL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - pp-zookeeper
    networks:
      - pp-network

  pp-battle:
    container_name: pp-battle
    build:
      context: /battle-service
      dockerfile: /Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 8080:${BATTLE_PORT}
    depends_on:
      - pp-mysql
      - pp-kafka
    networks:
      - pp-network

  pp-user:
    container_name: pp-user
    build:
      context: /user-service
      dockerfile: /Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${USER_PORT}:${USER_PORT}
    depends_on:
      - pp-mysql
    networks:
      - pp-network

  pp-statistic:
    container_name: pp-statistic
    build:
      context: /statistic-service
      dockerfile: /Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${STATISTIC_PORT}:${STATISTIC_PORT}
    depends_on:
      - pp-mongo
      - pp-kafka
    networks:
      - pp-network

networks:
  pp-network:
    driver: bridge
    ipam:
      driver: default
